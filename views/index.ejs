<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real-Time Temperature, pH, and TDS Data</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* General Body Styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f6f9;
            color: #333;
            margin: 0;
            display: flex;
        }

        /* Sidebar Styling */
        .sidebar {
            width: 250px;
            background-color: #2c3e50;
            color: #fff;
            position: fixed;
            height: 100%;
            padding-top: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .sidebar a {
            color: #fff;
            padding: 15px;
            text-decoration: none;
            font-size: 1.1em;
            width: 100%;
            text-align: center;
        }

        .sidebar a:hover {
            background-color: #34495e;
        }

        /* Main Content Styling */
        .main-content {
            margin-left: 250px;
            padding: 20px;
            flex-grow: 1;
        }

        h2 {
            font-size: 1.8em;
            color: #0d6efd;
            margin-top: 20px;
            text-align: center;
            border-bottom: 2px solid #0d6efd;
            padding-bottom: 5px;
        }

        /* Chart Container Styling */
        .chart-container {
            width: 90%;
            max-width: 800px;
            background: #fff;
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            padding: 20px;
            margin: 20px auto;
        }

        /* Canvas Styling */
        canvas {
            width: 100% !important;
            max-height: 400px;
        }

        /* Footer Styling */
        footer {
            text-align: center;
            margin-top: 20px;
            font-size: 0.9em;
            color: #555;
        }

        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .sidebar {
                width: 200px;
            }
            .main-content {
                margin-left: 200px;
            }
            h2 {
                font-size: 1.5em;
            }
        }

        @media (max-width: 480px) {
            .sidebar {
                width: 100px;
            }
            .main-content {
                margin-left: 100px;
            }
            h2 {
                font-size: 1.3em;
            }
            .sidebar a {
                font-size: 0.9em;
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <h3>Menu</h3>
        <a href="/">Dashboard</a>
        <a href="/controller">Controller</a>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <h2>Real-Time Temperature Data</h2>
        <div class="chart-container">
            <canvas id="temperatureChart"></canvas>
        </div>

        <h2>Real-Time pH Data</h2>
        <div class="chart-container">
            <canvas id="phChart"></canvas>
        </div>

        <h2>Real-Time TDS Data</h2>
        <div class="chart-container">
            <canvas id="tdsChart"></canvas>
        </div>

        <footer>Data updates every 5 seconds</footer>
    </div>

    <script>
        // Temperature Chart
        const ctxTemp = document.getElementById('temperatureChart').getContext('2d');
        const temperatureChart = new Chart(ctxTemp, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Temperature (°C)',
                    data: [],
                    borderColor: 'rgba(0, 153, 204, 1)',
                    backgroundColor: 'rgba(0, 153, 204, 0.1)',
                    borderWidth: 2,
                    fill: true,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        type: 'category',
                        title: {
                            display: true,
                            text: 'Time',
                            font: { weight: 'bold' }
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Temperature (°C)',
                            font: { weight: 'bold' }
                        }
                    }
                },
                plugins: {
                    legend: { position: 'top' }
                },
                animation: { duration: 0 }
            }
        });

        // pH Chart
        const ctxPH = document.getElementById('phChart').getContext('2d');
        const phChart = new Chart(ctxPH, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'pH Value',
                    data: [],
                    borderColor: 'rgba(255, 99, 132, 1)',
                    backgroundColor: 'rgba(255, 99, 132, 0.1)',
                    borderWidth: 2,
                    fill: true,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        type: 'category',
                        title: {
                            display: true,
                            text: 'Time',
                            font: { weight: 'bold' }
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'pH Value',
                            font: { weight: 'bold' }
                        }
                    }
                },
                plugins: {
                    legend: { position: 'top' }
                },
                animation: { duration: 0 }
            }
        });

        // TDS Chart
        const ctxTDS = document.getElementById('tdsChart').getContext('2d');
        const tdsChart = new Chart(ctxTDS, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'TDS (ppm)',
                    data: [],
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.1)',
                    borderWidth: 2,
                    fill: true,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        type: 'category',
                        title: {
                            display: true,
                            text: 'Time',
                            font: { weight: 'bold' }
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'TDS (ppm)',
                            font: { weight: 'bold' }
                        }
                    }
                },
                plugins: {
                    legend: { position: 'top' }
                },
                animation: { duration: 0 }
            }
        });

        // Function to fetch temperature data from the server
        function fetchTemperatureData() {
            fetch('/temperature')
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        const latestReading = data[0];
                        const readingTime = new Date(latestReading.reading_time).toLocaleString();
                        const temperatureC = latestReading.temperature_celsius;

                        // Update temperature chart
                        temperatureChart.data.labels.push(readingTime);
                        temperatureChart.data.datasets[0].data.push(temperatureC);

                        // Limit to the last 20 data points
                        if (temperatureChart.data.labels.length > 20) {
                            temperatureChart.data.labels.shift();
                            temperatureChart.data.datasets[0].data.shift();
                        }

                        temperatureChart.update();
                    }
                })
                .catch(error => console.error('Error fetching temperature data:', error));
        }

        // Function to fetch pH data from the server
        function fetchPHData() {
            fetch('/ph_readings')
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        const latestReading = data[0];
                        const readingTime = new Date(latestReading.timestamp).toLocaleString();
                        const phValue = latestReading.pH_value;

                        // Update pH chart
                        phChart.data.labels.push(readingTime);
                        phChart.data.datasets[0].data.push(phValue);

                        // Limit to the last 20 data points
                        if (phChart.data.labels.length > 20) {
                            phChart.data.labels.shift();
                            phChart.data.datasets[0].data.shift();
                        }

                        phChart.update();
                    }
                })
                .catch(error => console.error('Error fetching pH data:', error));
        }

        // Function to fetch TDS data from the server
        function fetchTDSData() {
            fetch('/tds_readings')
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        const latestReading = data[0];
                        const readingTime = new Date(latestReading.timestamp).toLocaleString();
                        const tdsValue = latestReading.tds_value;

                        // Update TDS chart
                        tdsChart.data.labels.push(readingTime);
                        tdsChart.data.datasets[0].data.push(tdsValue);

                        // Limit to the last 20 data points
                        if (tdsChart.data.labels.length > 20) {
                            tdsChart.data.labels.shift();
                            tdsChart.data.datasets[0].data.shift();
                        }

                        tdsChart.update();
                    }
                })
                .catch(error => console.error('Error fetching TDS data:', error));
        }

        // Fetch data every 5 seconds
        setInterval(() => {
            fetchTemperatureData();
            fetchPHData();
            fetchTDSData();
        }, 5000);
    </script>
</body>
</html>
